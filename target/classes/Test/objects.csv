"class","identity","core.name","core.description","com.getmanta.edc.Expression"
"com.getmanta.edc.Schema","DWH","DWH","",""
"com.getmanta.edc.Group","DWH/Packages","Packages","",""
"com.getmanta.edc.Package","DWH/Packages/HISTORIZATION","HISTORIZATION","",""
"com.getmanta.edc.Group","DWH/Packages/HISTORIZATION/Procedures","Procedures","",""
"com.getmanta.edc.Procedure","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY","HIST_PARTY","",""
"com.getmanta.edc.Statement","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<164,7>MERGE UPDATE","<164,7>MERGE UPDATE","","merge into PARTY_H TARGET_TBL using (
  select
    PARTY_KEY,
    SRC_SYS_ID,
    BIRTH_DATE,
    BIRTH_NAME,
    BIRTH_PLACE,
    BUS_NAME,
    CUST_NO,
    COUNTRY_KEY,
    DEATH_DATE,
    DIC,
    FAMILY_NAME,
    FIRST_NAME,
    GENDER_KEY,
    ICO,
    RC,
    SHORT_NAME,
    SRC_ID
  from PARTY
  minus
  select 
    PARTY_KEY,
    SRC_SYS_ID,
    BIRTH_DATE,
    BIRTH_NAME,
    BIRTH_PLACE,
    BUS_NAME,
    CUST_NO,
    COUNTRY_KEY,
    DEATH_DATE,
    DIC,
    FAMILY_NAME,
    FIRST_NAME,
    GENDER_KEY,
    ICO,
    RC,
    SHORT_NAME,
    SRC_ID
  from PARTY_H
  where VALID_TO = C_FUTURE_DATE  
  ) SRC_TBL
  on (
    TARGET_TBL.PARTY_KEY = SRC_TBL.PARTY_KEY and
    TARGET_TBL.SRC_SYS_ID = SRC_TBL.SRC_SYS_ID and 
    TARGET_TBL.VALID_FROM = P_CURRENT_DATE and
    TARGET_TBL.VALID_TO = C_FUTURE_DATE
    ) 
  when matched then update set 
    TARGET_TBL.BIRTH_DATE = SRC_TBL.BIRTH_DATE,
    TARGET_TBL.BIRTH_NAME = SRC_TBL.BIRTH_NAME,
    TARGET_TBL.BIRTH_PLACE = SRC_TBL.BIRTH_PLACE,
    TARGET_TBL.BUS_NAME = SRC_TBL.BUS_NAME,
    TARGET_TBL.CUST_NO = SRC_TBL.CUST_NO,
    TARGET_TBL.COUNTRY_KEY = SRC_TBL.COUNTRY_KEY,
    TARGET_TBL.DEATH_DATE = SRC_TBL.DEATH_DATE,
    TARGET_TBL.DIC = SRC_TBL.DIC,
    TARGET_TBL.FAMILY_NAME = SRC_TBL.FAMILY_NAME,
    TARGET_TBL.FIRST_NAME = SRC_TBL.FIRST_NAME,
    TARGET_TBL.GENDER_KEY = SRC_TBL.GENDER_KEY,
    TARGET_TBL.ICO = SRC_TBL.ICO,
    TARGET_TBL.RC = SRC_TBL.RC,
    TARGET_TBL.SHORT_NAME = SRC_TBL.SHORT_NAME,
    TARGET_TBL.SRC_ID = SRC_TBL.SRC_ID
  when not matched then insert (
    TARGET_TBL.PARTY_KEY,
    TARGET_TBL.SRC_SYS_ID,
    TARGET_TBL.BIRTH_DATE,
    TARGET_TBL.BIRTH_NAME,
    TARGET_TBL.BIRTH_PLACE,
    TARGET_TBL.BUS_NAME,
    TARGET_TBL.CUST_NO,
    TARGET_TBL.COUNTRY_KEY,
    TARGET_TBL.DEATH_DATE,
    TARGET_TBL.DIC,
    TARGET_TBL.FAMILY_NAME,
    TARGET_TBL.FIRST_NAME,
    TARGET_TBL.GENDER_KEY,
    TARGET_TBL.ICO,
    TARGET_TBL.RC,
    TARGET_TBL.SHORT_NAME,
    TARGET_TBL.SRC_ID,
    TARGET_TBL.VALID_FROM,
    TARGET_TBL.VALID_TO
    ) values (
    SRC_TBL.PARTY_KEY,
    SRC_TBL.SRC_SYS_ID,
    SRC_TBL.BIRTH_DATE,
    SRC_TBL.BIRTH_NAME,
    SRC_TBL.BIRTH_PLACE,
    SRC_TBL.BUS_NAME,
    SRC_TBL.CUST_NO,
    SRC_TBL.COUNTRY_KEY,
    SRC_TBL.DEATH_DATE,
    SRC_TBL.DIC,
    SRC_TBL.FAMILY_NAME,
    SRC_TBL.FIRST_NAME,
    SRC_TBL.GENDER_KEY,
    SRC_TBL.ICO,
    SRC_TBL.RC,
    SRC_TBL.SHORT_NAME,
    SRC_TBL.SRC_ID,
    P_CURRENT_DATE, --VALID_FROM
    C_FUTURE_DATE --VALID_TO 
    )
"
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<164,7>MERGE UPDATE/1 BIRTH_DATE","1 BIRTH_DATE","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<164,7>MERGE UPDATE/10 FIRST_NAME","10 FIRST_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<164,7>MERGE UPDATE/11 GENDER_KEY","11 GENDER_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<164,7>MERGE UPDATE/12 ICO","12 ICO","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<164,7>MERGE UPDATE/13 RC","13 RC","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<164,7>MERGE UPDATE/14 SHORT_NAME","14 SHORT_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<164,7>MERGE UPDATE/15 SRC_ID","15 SRC_ID","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<164,7>MERGE UPDATE/2 BIRTH_NAME","2 BIRTH_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<164,7>MERGE UPDATE/3 BIRTH_PLACE","3 BIRTH_PLACE","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<164,7>MERGE UPDATE/4 BUS_NAME","4 BUS_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<164,7>MERGE UPDATE/5 CUST_NO","5 CUST_NO","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<164,7>MERGE UPDATE/6 COUNTRY_KEY","6 COUNTRY_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<164,7>MERGE UPDATE/7 DEATH_DATE","7 DEATH_DATE","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<164,7>MERGE UPDATE/8 DIC","8 DIC","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<164,7>MERGE UPDATE/9 FAMILY_NAME","9 FAMILY_NAME","",""
"com.getmanta.edc.Statement","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT","<180,7>MERGE INSERT","","merge into PARTY_H TARGET_TBL using (
  d
    PARTY_KEY,
    SRC_SYS_ID,
    BIRTH_DATE,
    BIRTH_NAME,
    BIRTH_PLACE,
    BUS_NAME,
    CUST_NO,
    COUNTRY_KEY,
    DEATH_DATE,
    DIC,
    FAMILY_NAME,
    FIRST_NAME,
    GENDER_KEY,
    ICO,
    RC,
    SHORT_NAME,
    SRC_ID
  from PARTY
  minus
  select 
    PARTY_KEY,
    SRC_SYS_ID,
    BIRTH_DATE,
    BIRTH_NAME,
    BIRTH_PLACE,
    BUS_NAME,
    CUST_NO,
    COUNTRY_KEY,
    DEATH_DATE,
    DIC,
    FAMILY_NAME,
    FIRST_NAME,
    GENDER_KEY,
    ICO,
    RC,
    SHORT_NAME,
    SRC_ID
  from PARTY_H
  where VALID_TO = C_FUTURE_DATE  
  ) SRC_TBL
  on (
    TARGET_TBL.PARTY_KEY = SRC_TBL.PARTY_KEY and
    TARGET_TBL.SRC_SYS_ID = SRC_TBL.SRC_SYS_ID and 
    TARGET_TBL.VALID_FROM = P_CURRENT_DATE and
    TARGET_TBL.VALID_TO = C_FUTURE_DATE
    ) 
  when matched then update set 
    TARGET_TBL.BIRTH_DATE = SRC_TBL.BIRTH_DATE,
    TARGET_TBL.BIRTH_NAME = SRC_TBL.BIRTH_NAME,
    TARGET_TBL.BIRTH_PLACE = SRC_TBL.BIRTH_PLACE,
    TARGET_TBL.BUS_NAME = SRC_TBL.BUS_NAME,
    TARGET_TBL.CUST_NO = SRC_TBL.CUST_NO,
    TARGET_TBL.COUNTRY_KEY = SRC_TBL.COUNTRY_KEY,
    TARGET_TBL.DEATH_DATE = SRC_TBL.DEATH_DATE,
    TARGET_TBL.DIC = SRC_TBL.DIC,
    TARGET_TBL.FAMILY_NAME = SRC_TBL.FAMILY_NAME,
    TARGET_TBL.FIRST_NAME = SRC_TBL.FIRST_NAME,
    TARGET_TBL.GENDER_KEY = SRC_TBL.GENDER_KEY,
    TARGET_TBL.ICO = SRC_TBL.ICO,
    TARGET_TBL.RC = SRC_TBL.RC,
    TARGET_TBL.SHORT_NAME = SRC_TBL.SHORT_NAME,
    TARGET_TBL.SRC_ID = SRC_TBL.SRC_ID
  when not matched then insert (
    TARGET_TBL.PARTY_KEY,
    TARGET_TBL.SRC_SYS_ID,
    TARGET_TBL.BIRTH_DATE,
    TARGET_TBL.BIRTH_NAME,
    TARGET_TBL.BIRTH_PLACE,
    TARGET_TBL.BUS_NAME,
    TARGET_TBL.CUST_NO,
    TARGET_TBL.COUNTRY_KEY,
    TARGET_TBL.DEATH_DATE,
    TARGET_TBL.DIC,
    TARGET_TBL.FAMILY_NAME,
    TARGET_TBL.FIRST_NAME,
    TARGET_TBL.GENDER_KEY,
    TARGET_TBL.ICO,
    TARGET_TBL.RC,
    TARGET_TBL.SHORT_NAME,
    TARGET_TBL.SRC_ID,
    TARGET_TBL.VALID_FROM,
    TARGET_TBL.VALID_TO
    ) values (
    SRC_TBL.PARTY_KEY,
    SRC_TBL.SRC_SYS_ID,
    SRC_TBL.BIRTH_DATE,
    SRC_TBL.BIRTH_NAME,
    SRC_TBL.BIRTH_PLACE,
    SRC_TBL.BUS_NAME,
    SRC_TBL.CUST_NO,
    SRC_TBL.COUNTRY_KEY,
    SRC_TBL.DEATH_DATE,
    SRC_TBL.DIC,
    SRC_TBL.FAMILY_NAME,
    SRC_TBL.FIRST_NAME,
    SRC_TBL.GENDER_KEY,
    SRC_TBL.ICO,
    SRC_TBL.RC,
    SRC_TBL.SHORT_NAME,
    SRC_TBL.SRC_ID,
    P_CURRENT_DATE, --VALID_FROM
    C_FUTURE_DATE --VALID_TO 
    )
"
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/1 PARTY_KEY","1 PARTY_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/10 DIC","10 DIC","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/11 FAMILY_NAME","11 FAMILY_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/12 FIRST_NAME","12 FIRST_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/13 GENDER_KEY","13 GENDER_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/14 ICO","14 ICO","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/15 RC","15 RC","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/16 SHORT_NAME","16 SHORT_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/17 SRC_ID","17 SRC_ID","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/18 VALID_FROM","18 VALID_FROM","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/19 VALID_TO","19 VALID_TO","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/2 SRC_SYS_ID","2 SRC_SYS_ID","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/3 BIRTH_DATE","3 BIRTH_DATE","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/4 BIRTH_NAME","4 BIRTH_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/5 BIRTH_PLACE","5 BIRTH_PLACE","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/6 BUS_NAME","6 BUS_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/7 CUST_NO","7 CUST_NO","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/8 COUNTRY_KEY","8 COUNTRY_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<180,7>MERGE INSERT/9 DEATH_DATE","9 DEATH_DATE","",""
"com.getmanta.edc.Statement","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<56,7>MERGE UPDATE","<56,7>MERGE UPDATE","","merge into PARTY_H TARGET_TBL using (
  select
    PARTY_KEY,
    SRC_SYS_ID,
    BIRTH_DATE,
    BIRTH_NAME,
    BIRTH_PLACE,
    BUS_NAME,
    CUST_NO,
    COUNTRY_KEY,
    DEATH_DATE,
    DIC,
    FAMILY_NAME,
    FIRST_NAME,
    GENDER_KEY,
    ICO,
    RC,
    SHORT_NAME,
    SRC_ID
  from PARTY
  minus
  select 
    PARTY_KEY,
    SRC_SYS_ID,
    BIRTH_DATE,
    BIRTH_NAME,
    BIRTH_PLACE,
    BUS_NAME,
    CUST_NO,
    COUNTRY_KEY,
    DEATH_DATE,
    DIC,
    FAMILY_NAME,
    FIRST_NAME,
    GENDER_KEY,
    ICO,
    RC,
    SHORT_NAME,
    SRC_ID
  from PARTY_H
  where VALID_TO = C_FUTURE_DATE  
  ) SRC_TBL
  on (
    TARGET_TBL.PARTY_KEY = SRC_TBL.PARTY_KEY and
    TARGET_TBL.SRC_SYS_ID = SRC_TBL.SRC_SYS_ID and 
    TARGET_TBL.VALID_FROM = P_CURRENT_DATE and
    TARGET_TBL.VALID_TO = C_FUTURE_DATE
    ) 
  when matched then update set 
    TARGET_TBL.BIRTH_DATE = SRC_TBL.BIRTH_DATE,
    TARGET_TBL.BIRTH_NAME = SRC_TBL.BIRTH_NAME,
    TARGET_TBL.BIRTH_PLACE = SRC_TBL.BIRTH_PLACE,
    TARGET_TBL.BUS_NAME = SRC_TBL.BUS_NAME,
    TARGET_TBL.CUST_NO = SRC_TBL.CUST_NO,
    TARGET_TBL.COUNTRY_KEY = SRC_TBL.COUNTRY_KEY,
    TARGET_TBL.DEATH_DATE = SRC_TBL.DEATH_DATE,
    TARGET_TBL.DIC = SRC_TBL.DIC,
    TARGET_TBL.FAMILY_NAME = SRC_TBL.FAMILY_NAME,
    TARGET_TBL.FIRST_NAME = SRC_TBL.FIRST_NAME,
    TARGET_TBL.GENDER_KEY = SRC_TBL.GENDER_KEY,
    TARGET_TBL.ICO = SRC_TBL.ICO,
    TARGET_TBL.RC = SRC_TBL.RC,
    TARGET_TBL.SHORT_NAME = SRC_TBL.SHORT_NAME,
    TARGET_TBL.SRC_ID = SRC_TBL.SRC_ID
  when not matched then insert (
    TARGET_TBL.PARTY_KEY,
    TARGET_TBL.SRC_SYS_ID,
    TARGET_TBL.BIRTH_DATE,
    TARGET_TBL.BIRTH_NAME,
    TARGET_TBL.BIRTH_PLACE,
    TARGET_TBL.BUS_NAME,
    TARGET_TBL.CUST_NO,
    TARGET_TBL.COUNTRY_KEY,
    TARGET_TBL.DEATH_DATE,
    TARGET_TBL.DIC,
    TARGET_TBL.FAMILY_NAME,
    TARGET_TBL.FIRST_NAME,
    TARGET_TBL.GENDER_KEY,
    TARGET_TBL.ICO,
    TARGET_TBL.RC,
    TARGET_TBL.SHORT_NAME,
    TARGET_TBL.SRC_ID,
    TARGET_TBL.VALID_FROM,
    TARGET_TBL.VALID_TO
    ) values (
    SRC_TBL.PARTY_KEY,
    SRC_TBL.SRC_SYS_ID,
    SRC_TBL.BIRTH_DATE,
    SRC_TBL.BIRTH_NAME,
    SRC_TBL.BIRTH_PLACE,
    SRC_TBL.BUS_NAME,
    SRC_TBL.CUST_NO,
    SRC_TBL.COUNTRY_KEY,
    SRC_TBL.DEATH_DATE,
    SRC_TBL.DIC,
    SRC_TBL.FAMILY_NAME,
    SRC_TBL.FIRST_NAME,
    SRC_TBL.GENDER_KEY,
    SRC_TBL.ICO,
    SRC_TBL.RC,
    SRC_TBL.SHORT_NAME,
    SRC_TBL.SRC_ID,
    P_CURRENT_DATE, --VALID_FROM
    C_FUTURE_DATE --VALID_TO 
    )
"
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<56,7>MERGE UPDATE/1 BIRTH_DATE","1 BIRTH_DATE","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<56,7>MERGE UPDATE/10 FIRST_NAME","10 FIRST_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<56,7>MERGE UPDATE/11 GENDER_KEY","11 GENDER_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<56,7>MERGE UPDATE/12 ICO","12 ICO","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<56,7>MERGE UPDATE/13 RC","13 RC","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<56,7>MERGE UPDATE/14 SHORT_NAME","14 SHORT_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<56,7>MERGE UPDATE/15 SRC_ID","15 SRC_ID","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<56,7>MERGE UPDATE/2 BIRTH_NAME","2 BIRTH_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<56,7>MERGE UPDATE/3 BIRTH_PLACE","3 BIRTH_PLACE","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<56,7>MERGE UPDATE/4 BUS_NAME","4 BUS_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<56,7>MERGE UPDATE/5 CUST_NO","5 CUST_NO","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<56,7>MERGE UPDATE/6 COUNTRY_KEY","6 COUNTRY_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<56,7>MERGE UPDATE/7 DEATH_DATE","7 DEATH_DATE","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<56,7>MERGE UPDATE/8 DIC","8 DIC","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<56,7>MERGE UPDATE/9 FAMILY_NAME","9 FAMILY_NAME","",""
"com.getmanta.edc.Statement","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT","<72,7>MERGE INSERT","","merge into PARTY_H TARGET_TBL using (
  select
    PARTY_KEY,
    SRC_SYS_ID,
    BIRTH_DATE,
    BIRTH_NAME,
    BIRTH_PLACE,
    BUS_NAME,
    CUST_NO,
    COUNTRY_KEY,
    DEATH_DATE,
    DIC,
    FAMILY_NAME,
    FIRST_NAME,
    GENDER_KEY,
    ICO,
    RC,
    SHORT_NAME,
    SRC_ID
  from PARTY
  minus
  select 
    PARTY_KEY,
    SRC_SYS_ID,
    BIRTH_DATE,
    BIRTH_NAME,
    BIRTH_PLACE,
    BUS_NAME,
    CUST_NO,
    COUNTRY_KEY,
    DEATH_DATE,
    DIC,
    FAMILY_NAME,
    FIRST_NAME,
    GENDER_KEY,
    ICO,
    RC,
    SHORT_NAME,
    SRC_ID
  from PARTY_H
  where VALID_TO = C_FUTURE_DATE  
  ) SRC_TBL
  on (
    TARGET_TBL.PARTY_KEY = SRC_TBL.PARTY_KEY and
    TARGET_TBL.SRC_SYS_ID = SRC_TBL.SRC_SYS_ID and 
    TARGET_TBL.VALID_FROM = P_CURRENT_DATE and
    TARGET_TBL.VALID_TO = C_FUTURE_DATE
    ) 
  when matched then update set 
    TARGET_TBL.BIRTH_DATE = SRC_TBL.BIRTH_DATE,
    TARGET_TBL.BIRTH_NAME = SRC_TBL.BIRTH_NAME,
    TARGET_TBL.BIRTH_PLACE = SRC_TBL.BIRTH_PLACE,
    TARGET_TBL.BUS_NAME = SRC_TBL.BUS_NAME,
    TARGET_TBL.CUST_NO = SRC_TBL.CUST_NO,
    TARGET_TBL.COUNTRY_KEY = SRC_TBL.COUNTRY_KEY,
    TARGET_TBL.DEATH_DATE = SRC_TBL.DEATH_DATE,
    TARGET_TBL.DIC = SRC_TBL.DIC,
    TARGET_TBL.FAMILY_NAME = SRC_TBL.FAMILY_NAME,
    TARGET_TBL.FIRST_NAME = SRC_TBL.FIRST_NAME,
    TARGET_TBL.GENDER_KEY = SRC_TBL.GENDER_KEY,
    TARGET_TBL.ICO = SRC_TBL.ICO,
    TARGET_TBL.RC = SRC_TBL.RC,
    TARGET_TBL.SHORT_NAME = SRC_TBL.SHORT_NAME,
    TARGET_TBL.SRC_ID = SRC_TBL.SRC_ID
  when not matched then insert (
    TARGET_TBL.PARTY_KEY,
    TARGET_TBL.SRC_SYS_ID,
    TARGET_TBL.BIRTH_DATE,
    TARGET_TBL.BIRTH_NAME,
    TARGET_TBL.BIRTH_PLACE,
    TARGET_TBL.BUS_NAME,
    TARGET_TBL.CUST_NO,
    TARGET_TBL.COUNTRY_KEY,
    TARGET_TBL.DEATH_DATE,
    TARGET_TBL.DIC,
    TARGET_TBL.FAMILY_NAME,
    TARGET_TBL.FIRST_NAME,
    TARGET_TBL.GENDER_KEY,
    TARGET_TBL.ICO,
    TARGET_TBL.RC,
    TARGET_TBL.SHORT_NAME,
    TARGET_TBL.SRC_ID,
    TARGET_TBL.VALID_FROM,
    TARGET_TBL.VALID_TO
    ) values (
    SRC_TBL.PARTY_KEY,
    SRC_TBL.SRC_SYS_ID,
    SRC_TBL.BIRTH_DATE,
    SRC_TBL.BIRTH_NAME,
    SRC_TBL.BIRTH_PLACE,
    SRC_TBL.BUS_NAME,
    SRC_TBL.CUST_NO,
    SRC_TBL.COUNTRY_KEY,
    SRC_TBL.DEATH_DATE,
    SRC_TBL.DIC,
    SRC_TBL.FAMILY_NAME,
    SRC_TBL.FIRST_NAME,
    SRC_TBL.GENDER_KEY,
    SRC_TBL.ICO,
    SRC_TBL.RC,
    SRC_TBL.SHORT_NAME,
    SRC_TBL.SRC_ID,
    P_CURRENT_DATE, --VALID_FROM
    C_FUTURE_DATE --VALID_TO 
    )
"
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/1 PARTY_KEY","1 PARTY_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/10 DIC","10 DIC","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/11 FAMILY_NAME","11 FAMILY_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/12 FIRST_NAME","12 FIRST_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/13 GENDER_KEY","13 GENDER_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/14 ICO","14 ICO","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/15 RC","15 RC","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/16 SHORT_NAME","16 SHORT_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/17 SRC_ID","17 SRC_ID","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/18 VALID_FROM","18 VALID_FROM","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/19 VALID_TO","19 VALID_TO","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/2 SRC_SYS_ID","2 SRC_SYS_ID","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/3 BIRTH_DATE","3 BIRTH_DATE","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/4 BIRTH_NAME","4 BIRTH_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/5 BIRTH_PLACE","5 BIRTH_PLACE","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/6 BUS_NAME","6 BUS_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/7 CUST_NO","7 CUST_NO","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/8 COUNTRY_KEY","8 COUNTRY_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/HISTORIZATION/Procedures/HIST_PARTY/<72,7>MERGE INSERT/9 DEATH_DATE","9 DEATH_DATE","",""
"com.getmanta.edc.Package","DWH/Packages/IMPORT_CRM","IMPORT_CRM","",""
"com.getmanta.edc.Group","DWH/Packages/IMPORT_CRM/Procedures","Procedures","",""
"com.getmanta.edc.Procedure","DWH/Packages/IMPORT_CRM/Procedures/IMPORT","IMPORT","",""
"com.getmanta.edc.Statement","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<57,3>MERGE UPDATE","<57,3>MERGE UPDATE","","merge into PARTY TARGET_TBL using (
select
  BIRTH_DATE,
  BIRTH_NAME,
  BIRTH_PLACE,
  BUS_NAME,
  CUST_NO,
  COUNTRY_KEY,
  DEATH_DATE,
  DIC,
  FAMILY_NAME,
  FIRST_NAME,
  ICO,
  RC,
  SRC_ID
from (
  select 
    NVL(CRM_CLIENT.DATE_BIRTH, C_PAST_DATE) as BIRTH_DATE,
    NVL(CRM_CLIENT.NAME_MAIDEN, C_NA) as BIRTH_NAME,
    NVL( CRM_CLIENT.BIRTH_PLACE , C_NA) as BIRTH_PLACE,
    NVL(CRM_CLIENT.COMPANY_NAME, C_NA) as BUS_NAME,
    NVL( CRM_CLIENT.CUST_NO , C_NA) as CUST_NO,
    case
      when CRM_CLIENT.id_country is null
      then C_NA
      else nvl(CD_COUNTRY.COUNTRY_KEY, C_NA) 
    end as COUNTRY_KEY,
    NVL( CRM_CLIENT.DATE_DEATH, C_FUTURE_DATE) as DEATH_DATE,
    NVL(CRM_CLIENT.VAT_ID, C_NA) as DIC,
    NVL(CRM_CLIENT.NAME_LAST, C_NA) as FAMILY_NAME,
    NVL(CRM_CLIENT.NAME_FIRST, C_NA) as FIRST_NAME,
    NVL(CRM_CLIENT.COMPANY_ID, C_NA) as ICO,
    NVL(CRM_CLIENT.CARD_SOCIAL, C_NA) as RC,
    to_char(CRM_CLIENT.ID_CLIENT ) as SRC_ID
  from 
    CRM_CLIENT
    left join CD_COUNTRY on CD_COUNTRY.src_id = CRM_CLIENT.id_country and CD_COUNTRY.src_sys_id = C_SRC_SYS_ID_CRM
  where 
    CRM_CLIENT.VALIDITY_DATE = sysdate
  )
) SRC_TBL
on (
  TARGET_TBL.SRC_SYS_ID = C_SRC_SYS_ID_CRM
  and TARGET_TBL.SRC_ID = SRC_TBL.SRC_ID
  )
when matched then update set
   TARGET_TBL.BIRTH_DATE = SRC_TBL.BIRTH_DATE
   ,TARGET_TBL.BIRTH_NAME = SRC_TBL.BIRTH_NAME
   ,TARGET_TBL.BIRTH_PLACE = SRC_TBL.BIRTH_PLACE
   ,TARGET_TBL.BUS_NAME = SRC_TBL.BUS_NAME
   ,TARGET_TBL.CUST_NO = SRC_TBL.CUST_NO
   ,TARGET_TBL.COUNTRY_KEY = SRC_TBL.COUNTRY_KEY
   ,TARGET_TBL.DEATH_DATE = SRC_TBL.DEATH_DATE
   ,TARGET_TBL.DIC = SRC_TBL.DIC
   ,TARGET_TBL.FAMILY_NAME = SRC_TBL.FAMILY_NAME
   ,TARGET_TBL.FIRST_NAME = SRC_TBL.FIRST_NAME
   ,TARGET_TBL.ICO = SRC_TBL.ICO
   ,TARGET_TBL.RC = SRC_TBL.RC
where
  (
   (TARGET_TBL.BIRTH_DATE != SRC_TBL.BIRTH_DATE) or
   (TARGET_TBL.BIRTH_NAME != SRC_TBL.BIRTH_NAME) or
   (TARGET_TBL.BIRTH_PLACE != SRC_TBL.BIRTH_PLACE) or
   (TARGET_TBL.BUS_NAME != SRC_TBL.BUS_NAME) or
   (TARGET_TBL.CUST_NO != SRC_TBL.CUST_NO) or
   (TARGET_TBL.COUNTRY_KEY != SRC_TBL.COUNTRY_KEY) or
   (TARGET_TBL.DEATH_DATE != SRC_TBL.DEATH_DATE) or
   (TARGET_TBL.DIC != SRC_TBL.DIC) or
   (TARGET_TBL.FAMILY_NAME != SRC_TBL.FAMILY_NAME) or
   (TARGET_TBL.FIRST_NAME != SRC_TBL.FIRST_NAME) or
   (TARGET_TBL.ICO != SRC_TBL.ICO) or
   (TARGET_TBL.RC != SRC_TBL.RC)
  )
when not matched then insert (
  BIRTH_DATE
  ,BIRTH_NAME
  ,BIRTH_PLACE
  ,BUS_NAME
  ,CUST_NO
  ,COUNTRY_KEY
  ,DEATH_DATE
  ,DIC
  ,FAMILY_NAME
  ,FIRST_NAME
  ,ICO
  ,PARTY_KEY
  ,RC
  ,SRC_ID
  ,SRC_SYS_ID
  ) values (
  SRC_TBL.BIRTH_DATE
  ,SRC_TBL.BIRTH_NAME
  ,SRC_TBL.BIRTH_PLACE
  ,SRC_TBL.BUS_NAME
  ,SRC_TBL.CUST_NO
  ,SRC_TBL.COUNTRY_KEY
  ,SRC_TBL.DEATH_DATE
  ,SRC_TBL.DIC
  ,SRC_TBL.FAMILY_NAME
  ,SRC_TBL.FIRST_NAME
  ,SRC_TBL.ICO
  ,SEQ_PARTY_KEY.nextval
  ,SRC_TBL.RC
  ,SRC_TBL.SRC_ID
  ,C_SRC_SYS_ID_CRM
  )
"
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<57,3>MERGE UPDATE/1 BIRTH_DATE","1 BIRTH_DATE","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<57,3>MERGE UPDATE/10 FIRST_NAME","10 FIRST_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<57,3>MERGE UPDATE/11 ICO","11 ICO","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<57,3>MERGE UPDATE/12 RC","12 RC","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<57,3>MERGE UPDATE/2 BIRTH_NAME","2 BIRTH_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<57,3>MERGE UPDATE/3 BIRTH_PLACE","3 BIRTH_PLACE","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<57,3>MERGE UPDATE/4 BUS_NAME","4 BUS_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<57,3>MERGE UPDATE/5 CUST_NO","5 CUST_NO","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<57,3>MERGE UPDATE/6 COUNTRY_KEY","6 COUNTRY_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<57,3>MERGE UPDATE/7 DEATH_DATE","7 DEATH_DATE","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<57,3>MERGE UPDATE/8 DIC","8 DIC","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<57,3>MERGE UPDATE/9 FAMILY_NAME","9 FAMILY_NAME","",""
"com.getmanta.edc.Statement","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<85,3>MERGE INSERT","<85,3>MERGE INSERT","","merge into PARTY TARGET_TBL using (
select
  BIRTH_DATE,
  BIRTH_NAME,
  BIRTH_PLACE,
  BUS_NAME,
  CUST_NO,
  COUNTRY_KEY,
  DEATH_DATE,
  DIC,
  FAMILY_NAME,
  FIRST_NAME,
  ICO,
  RC,
  SRC_ID
from (
  select 
    NVL(CRM_CLIENT.DATE_BIRTH, C_PAST_DATE) as BIRTH_DATE,
    NVL(CRM_CLIENT.NAME_MAIDEN, C_NA) as BIRTH_NAME,
    NVL( CRM_CLIENT.BIRTH_PLACE , C_NA) as BIRTH_PLACE,
    NVL(CRM_CLIENT.COMPANY_NAME, C_NA) as BUS_NAME,
    NVL( CRM_CLIENT.CUST_NO , C_NA) as CUST_NO,
    case
      when CRM_CLIENT.id_country is null
      then C_NA
      else nvl(CD_COUNTRY.COUNTRY_KEY, C_NA) 
    end as COUNTRY_KEY,
    NVL( CRM_CLIENT.DATE_DEATH, C_FUTURE_DATE) as DEATH_DATE,
    NVL(CRM_CLIENT.VAT_ID, C_NA) as DIC,
    NVL(CRM_CLIENT.NAME_LAST, C_NA) as FAMILY_NAME,
    NVL(CRM_CLIENT.NAME_FIRST, C_NA) as FIRST_NAME,
    NVL(CRM_CLIENT.COMPANY_ID, C_NA) as ICO,
    NVL(CRM_CLIENT.CARD_SOCIAL, C_NA) as RC,
    to_char(CRM_CLIENT.ID_CLIENT ) as SRC_ID
  from 
    CRM_CLIENT
    left join CD_COUNTRY on CD_COUNTRY.src_id = CRM_CLIENT.id_country and CD_COUNTRY.src_sys_id = C_SRC_SYS_ID_CRM
  where 
    CRM_CLIENT.VALIDITY_DATE = sysdate
  )
) SRC_TBL
on (
  TARGET_TBL.SRC_SYS_ID = C_SRC_SYS_ID_CRM
  and TARGET_TBL.SRC_ID = SRC_TBL.SRC_ID
  )
when matched then update set
   TARGET_TBL.BIRTH_DATE = SRC_TBL.BIRTH_DATE
   ,TARGET_TBL.BIRTH_NAME = SRC_TBL.BIRTH_NAME
   ,TARGET_TBL.BIRTH_PLACE = SRC_TBL.BIRTH_PLACE
   ,TARGET_TBL.BUS_NAME = SRC_TBL.BUS_NAME
   ,TARGET_TBL.CUST_NO = SRC_TBL.CUST_NO
   ,TARGET_TBL.COUNTRY_KEY = SRC_TBL.COUNTRY_KEY
   ,TARGET_TBL.DEATH_DATE = SRC_TBL.DEATH_DATE
   ,TARGET_TBL.DIC = SRC_TBL.DIC
   ,TARGET_TBL.FAMILY_NAME = SRC_TBL.FAMILY_NAME
   ,TARGET_TBL.FIRST_NAME = SRC_TBL.FIRST_NAME
   ,TARGET_TBL.ICO = SRC_TBL.ICO
   ,TARGET_TBL.RC = SRC_TBL.RC
where
  (
   (TARGET_TBL.BIRTH_DATE != SRC_TBL.BIRTH_DATE) or
   (TARGET_TBL.BIRTH_NAME != SRC_TBL.BIRTH_NAME) or
   (TARGET_TBL.BIRTH_PLACE != SRC_TBL.BIRTH_PLACE) or
   (TARGET_TBL.BUS_NAME != SRC_TBL.BUS_NAME) or
   (TARGET_TBL.CUST_NO != SRC_TBL.CUST_NO) or
   (TARGET_TBL.COUNTRY_KEY != SRC_TBL.COUNTRY_KEY) or
   (TARGET_TBL.DEATH_DATE != SRC_TBL.DEATH_DATE) or
   (TARGET_TBL.DIC != SRC_TBL.DIC) or
   (TARGET_TBL.FAMILY_NAME != SRC_TBL.FAMILY_NAME) or
   (TARGET_TBL.FIRST_NAME != SRC_TBL.FIRST_NAME) or
   (TARGET_TBL.ICO != SRC_TBL.ICO) or
   (TARGET_TBL.RC != SRC_TBL.RC)
  )
when not matched then insert (
  BIRTH_DATE
  ,BIRTH_NAME
  ,BIRTH_PLACE
  ,BUS_NAME
  ,CUST_NO
  ,COUNTRY_KEY
  ,DEATH_DATE
  ,DIC
  ,FAMILY_NAME
  ,FIRST_NAME
  ,ICO
  ,PARTY_KEY
  ,RC
  ,SRC_ID
  ,SRC_SYS_ID
  ) values (
  SRC_TBL.BIRTH_DATE
  ,SRC_TBL.BIRTH_NAME
  ,SRC_TBL.BIRTH_PLACE
  ,SRC_TBL.BUS_NAME
  ,SRC_TBL.CUST_NO
  ,SRC_TBL.COUNTRY_KEY
  ,SRC_TBL.DEATH_DATE
  ,SRC_TBL.DIC
  ,SRC_TBL.FAMILY_NAME
  ,SRC_TBL.FIRST_NAME
  ,SRC_TBL.ICO
  ,SEQ_PARTY_KEY.nextval
  ,SRC_TBL.RC
  ,SRC_TBL.SRC_ID
  ,C_SRC_SYS_ID_CRM
  )
"
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<85,3>MERGE INSERT/1 BIRTH_DATE","1 BIRTH_DATE","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<85,3>MERGE INSERT/10 FIRST_NAME","10 FIRST_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<85,3>MERGE INSERT/11 ICO","11 ICO","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<85,3>MERGE INSERT/12 PARTY_KEY","12 PARTY_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<85,3>MERGE INSERT/13 RC","13 RC","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<85,3>MERGE INSERT/14 SRC_ID","14 SRC_ID","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<85,3>MERGE INSERT/15 SRC_SYS_ID","15 SRC_SYS_ID","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<85,3>MERGE INSERT/2 BIRTH_NAME","2 BIRTH_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<85,3>MERGE INSERT/3 BIRTH_PLACE","3 BIRTH_PLACE","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<85,3>MERGE INSERT/4 BUS_NAME","4 BUS_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<85,3>MERGE INSERT/5 CUST_NO","5 CUST_NO","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<85,3>MERGE INSERT/6 COUNTRY_KEY","6 COUNTRY_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<85,3>MERGE INSERT/7 DEATH_DATE","7 DEATH_DATE","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<85,3>MERGE INSERT/8 DIC","8 DIC","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_CRM/Procedures/IMPORT/<85,3>MERGE INSERT/9 FAMILY_NAME","9 FAMILY_NAME","",""
"com.getmanta.edc.Package","DWH/Packages/IMPORT_LOAN","IMPORT_LOAN","",""
"com.getmanta.edc.Group","DWH/Packages/IMPORT_LOAN/Procedures","Procedures","",""
"com.getmanta.edc.Procedure","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT","IMPORT","",""
"com.getmanta.edc.Statement","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<108,7>MERGE UPDATE","<108,7>MERGE UPDATE","","merge into PARTY TARGET_TBL using (
  select
    BIRTH_DATE,
    BUS_NAME,
    CUST_NO,
    COUNTRY_KEY,
    FAMILY_NAME,
    FIRST_NAME,
    GENDER_KEY,
    ICO,
    RC,
    SHORT_NAME,
    SRC_ID,
    SRC_SYS_ID
  from (
    select 
      NVL(LOAN_CUSTOMER_PERSON.DATE_OF_BIRTH,C_PAST_DATE) as BIRTH_DATE,
      CASE WHEN LOAN_CUSTOMER.CUSTOMER_TYPE <> C_LOAN_CUSTOMER_PERSON
      THEN COALESCE (LOAN_CUSTOMER_CORPORATE.CORPORATE_NAME,LOAN_CUSTOMER.CUSTOMER_NAME,C_NA)
      ELSE
      C_NA
      END as BUS_NAME,
      LOAN_CUSTOMER.CUSTOMER_NO as CUST_NO,
      lookupCountry(LOAN_CUSTOMER_PERSON.COUNTRY_ID) as COUNTRY_KEY,
      CASE WHEN LOAN_CUSTOMER.CUSTOMER_TYPE = C_LOAN_CUSTOMER_PERSON
      THEN NVL(LOAN_CUSTOMER_PERSON.LAST_NAME,C_NA)
      ELSE
      C_NA
      END as FAMILY_NAME,
      CASE WHEN LOAN_CUSTOMER.CUSTOMER_TYPE = C_LOAN_CUSTOMER_PERSON
      THEN NVL(LOAN_CUSTOMER_PERSON.FIRST_NAME,C_NA)
      ELSE
      C_NA
      END as FIRST_NAME,
      lookupGender(LOAN_CUSTOMER_PERSON.SEX) as GENDER_KEY,
      NVL(LOAN_CUSTOMER_CORPORATE.NATIONAL_ID,C_NA) as ICO,
      NVL(LOAN_CUSTOMER_PERSON.NATIONAL_ID,C_NA) as RC,
      NVL(LOAN_CUSTOMER.SHORT_NAME,C_NA) as SHORT_NAME,
      LOAN_CUSTOMER.CUSTOMER_NO as SRC_ID,
      C_SRC_SYS_ID_LOAN as SRC_SYS_ID
    from 
      LOAN_CUSTOMER
      LEFT OUTER JOIN LOAN_CUSTOMER_PERSON ON (LOAN_CUSTOMER.CUSTOMER_NO = LOAN_CUSTOMER_PERSON.CUSTOMER_NO AND LOAN_CUSTOMER.CUSTOMER_TYPE = C_LOAN_CUSTOMER_PERSON AND LOAN_CUSTOMER.VALIDITY_DATE = LOAN_CUSTOMER_PERSON.VALIDITY_DATE)
      LEFT OUTER JOIN LOAN_CUSTOMER_CORPORATE ON (LOAN_CUSTOMER.CUSTOMER_NO = LOAN_CUSTOMER_CORPORATE.CUSTOMER_NO AND LOAN_CUSTOMER.CUSTOMER_TYPE <> C_LOAN_CUSTOMER_PERSON AND LOAN_CUSTOMER.VALIDITY_DATE = LOAN_CUSTOMER_CORPORATE.VALIDITY_DATE)
    where 
      LOAN_CUSTOMER.VALIDITY_DATE = P_CURRENT_DATE

    )
  ) SRC_TBL
  on (
    TARGET_TBL.SRC_SYS_ID = C_SRC_SYS_ID_LOAN
    and TARGET_TBL.SRC_ID = SRC_TBL.SRC_ID
    )
  when matched then update set
     TARGET_TBL.BIRTH_DATE = SRC_TBL.BIRTH_DATE
     ,TARGET_TBL.BUS_NAME = SRC_TBL.BUS_NAME
     ,TARGET_TBL.CUST_NO = SRC_TBL.CUST_NO
     ,TARGET_TBL.COUNTRY_KEY = SRC_TBL.COUNTRY_KEY
     ,TARGET_TBL.FAMILY_NAME = SRC_TBL.FAMILY_NAME
     ,TARGET_TBL.FIRST_NAME = SRC_TBL.FIRST_NAME
     ,TARGET_TBL.GENDER_KEY = SRC_TBL.GENDER_KEY
     ,TARGET_TBL.ICO = SRC_TBL.ICO
     ,TARGET_TBL.RC = SRC_TBL.RC
     ,TARGET_TBL.SHORT_NAME = SRC_TBL.SHORT_NAME
  where
    ( 
     (TARGET_TBL.BIRTH_DATE != SRC_TBL.BIRTH_DATE) or
     (TARGET_TBL.BUS_NAME != SRC_TBL.BUS_NAME) or
     (TARGET_TBL.CUST_NO != SRC_TBL.CUST_NO) or
     (TARGET_TBL.COUNTRY_KEY != SRC_TBL.COUNTRY_KEY) or
     (TARGET_TBL.FAMILY_NAME != SRC_TBL.FAMILY_NAME) or
     (TARGET_TBL.FIRST_NAME != SRC_TBL.FIRST_NAME) or
     (TARGET_TBL.GENDER_KEY != SRC_TBL.GENDER_KEY) or
     (TARGET_TBL.ICO != SRC_TBL.ICO) or
     (TARGET_TBL.RC != SRC_TBL.RC) or
     (TARGET_TBL.SHORT_NAME != SRC_TBL.SHORT_NAME)
    ) 
  when not matched then insert (
    BIRTH_DATE
    ,BUS_NAME
    ,CUST_NO
    ,COUNTRY_KEY
    ,FAMILY_NAME
    ,FIRST_NAME
    ,GENDER_KEY
    ,ICO
    ,PARTY_KEY
    ,RC
    ,SHORT_NAME
    ,SRC_ID
    ,SRC_SYS_ID
    ) values (
    SRC_TBL.BIRTH_DATE	
    ,SRC_TBL.BUS_NAME	
    ,SRC_TBL.CUST_NO	
    ,SRC_TBL.COUNTRY_KEY	
    ,SRC_TBL.FAMILY_NAME	
    ,SRC_TBL.FIRST_NAME	
    ,SRC_TBL.GENDER_KEY	
    ,SRC_TBL.ICO	
    ,SEQ_PARTY_KEY.nextval	
    ,SRC_TBL.RC	
    ,SRC_TBL.SHORT_NAME	
    ,SRC_TBL.SRC_ID	
    ,SRC_TBL.SRC_SYS_ID	
    )
"
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<108,7>MERGE UPDATE/1 BIRTH_DATE","1 BIRTH_DATE","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<108,7>MERGE UPDATE/10 SHORT_NAME","10 SHORT_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<108,7>MERGE UPDATE/2 BUS_NAME","2 BUS_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<108,7>MERGE UPDATE/3 CUST_NO","3 CUST_NO","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<108,7>MERGE UPDATE/4 COUNTRY_KEY","4 COUNTRY_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<108,7>MERGE UPDATE/5 FAMILY_NAME","5 FAMILY_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<108,7>MERGE UPDATE/6 FIRST_NAME","6 FIRST_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<108,7>MERGE UPDATE/7 GENDER_KEY","7 GENDER_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<108,7>MERGE UPDATE/8 ICO","8 ICO","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<108,7>MERGE UPDATE/9 RC","9 RC","",""
"com.getmanta.edc.Statement","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<132,7>MERGE INSERT","<132,7>MERGE INSERT","","merge into PARTY TARGET_TBL using (
  select
    BIRTH_DATE,
    BUS_NAME,
    CUST_NO,
    COUNTRY_KEY,
    FAMILY_NAME,
    FIRST_NAME,
    GENDER_KEY,
    ICO,
    RC,
    SHORT_NAME,
    SRC_ID,
    SRC_SYS_ID
  from (
    select 
      NVL(LOAN_CUSTOMER_PERSON.DATE_OF_BIRTH,C_PAST_DATE) as BIRTH_DATE,
      CASE WHEN LOAN_CUSTOMER.CUSTOMER_TYPE <> C_LOAN_CUSTOMER_PERSON
      THEN COALESCE (LOAN_CUSTOMER_CORPORATE.CORPORATE_NAME,LOAN_CUSTOMER.CUSTOMER_NAME,C_NA)
      ELSE
      C_NA
      END as BUS_NAME,
      LOAN_CUSTOMER.CUSTOMER_NO as CUST_NO,
      lookupCountry(LOAN_CUSTOMER_PERSON.COUNTRY_ID) as COUNTRY_KEY,
      CASE WHEN LOAN_CUSTOMER.CUSTOMER_TYPE = C_LOAN_CUSTOMER_PERSON
      THEN NVL(LOAN_CUSTOMER_PERSON.LAST_NAME,C_NA)
      ELSE
      C_NA
      END as FAMILY_NAME,
      CASE WHEN LOAN_CUSTOMER.CUSTOMER_TYPE = C_LOAN_CUSTOMER_PERSON
      THEN NVL(LOAN_CUSTOMER_PERSON.FIRST_NAME,C_NA)
      ELSE
      C_NA
      END as FIRST_NAME,
      lookupGender(LOAN_CUSTOMER_PERSON.SEX) as GENDER_KEY,
      NVL(LOAN_CUSTOMER_CORPORATE.NATIONAL_ID,C_NA) as ICO,
      NVL(LOAN_CUSTOMER_PERSON.NATIONAL_ID,C_NA) as RC,
      NVL(LOAN_CUSTOMER.SHORT_NAME,C_NA) as SHORT_NAME,
      LOAN_CUSTOMER.CUSTOMER_NO as SRC_ID,
      C_SRC_SYS_ID_LOAN as SRC_SYS_ID
    from 
      LOAN_CUSTOMER
      LEFT OUTER JOIN LOAN_CUSTOMER_PERSON ON (LOAN_CUSTOMER.CUSTOMER_NO = LOAN_CUSTOMER_PERSON.CUSTOMER_NO AND LOAN_CUSTOMER.CUSTOMER_TYPE = C_LOAN_CUSTOMER_PERSON AND LOAN_CUSTOMER.VALIDITY_DATE = LOAN_CUSTOMER_PERSON.VALIDITY_DATE)
      LEFT OUTER JOIN LOAN_CUSTOMER_CORPORATE ON (LOAN_CUSTOMER.CUSTOMER_NO = LOAN_CUSTOMER_CORPORATE.CUSTOMER_NO AND LOAN_CUSTOMER.CUSTOMER_TYPE <> C_LOAN_CUSTOMER_PERSON AND LOAN_CUSTOMER.VALIDITY_DATE = LOAN_CUSTOMER_CORPORATE.VALIDITY_DATE)
    where 
      LOAN_CUSTOMER.VALIDITY_DATE = P_CURRENT_DATE

    )
  ) SRC_TBL
  on (
    TARGET_TBL.SRC_SYS_ID = C_SRC_SYS_ID_LOAN
    and TARGET_TBL.SRC_ID = SRC_TBL.SRC_ID
    )
  when matched then update set
     TARGET_TBL.BIRTH_DATE = SRC_TBL.BIRTH_DATE
     ,TARGET_TBL.BUS_NAME = SRC_TBL.BUS_NAME
     ,TARGET_TBL.CUST_NO = SRC_TBL.CUST_NO
     ,TARGET_TBL.COUNTRY_KEY = SRC_TBL.COUNTRY_KEY
     ,TARGET_TBL.FAMILY_NAME = SRC_TBL.FAMILY_NAME
     ,TARGET_TBL.FIRST_NAME = SRC_TBL.FIRST_NAME
     ,TARGET_TBL.GENDER_KEY = SRC_TBL.GENDER_KEY
     ,TARGET_TBL.ICO = SRC_TBL.ICO
     ,TARGET_TBL.RC = SRC_TBL.RC
     ,TARGET_TBL.SHORT_NAME = SRC_TBL.SHORT_NAME
  where
    ( 
     (TARGET_TBL.BIRTH_DATE != SRC_TBL.BIRTH_DATE) or
     (TARGET_TBL.BUS_NAME != SRC_TBL.BUS_NAME) or
     (TARGET_TBL.CUST_NO != SRC_TBL.CUST_NO) or
     (TARGET_TBL.COUNTRY_KEY != SRC_TBL.COUNTRY_KEY) or
     (TARGET_TBL.FAMILY_NAME != SRC_TBL.FAMILY_NAME) or
     (TARGET_TBL.FIRST_NAME != SRC_TBL.FIRST_NAME) or
     (TARGET_TBL.GENDER_KEY != SRC_TBL.GENDER_KEY) or
     (TARGET_TBL.ICO != SRC_TBL.ICO) or
     (TARGET_TBL.RC != SRC_TBL.RC) or
     (TARGET_TBL.SHORT_NAME != SRC_TBL.SHORT_NAME)
    ) 
  when not matched then insert (
    BIRTH_DATE
    ,BUS_NAME
    ,CUST_NO
    ,COUNTRY_KEY
    ,FAMILY_NAME
    ,FIRST_NAME
    ,GENDER_KEY
    ,ICO
    ,PARTY_KEY
    ,RC
    ,SHORT_NAME
    ,SRC_ID
    ,SRC_SYS_ID
    ) values (
    SRC_TBL.BIRTH_DATE	
    ,SRC_TBL.BUS_NAME	
    ,SRC_TBL.CUST_NO	
    ,SRC_TBL.COUNTRY_KEY	
    ,SRC_TBL.FAMILY_NAME	
    ,SRC_TBL.FIRST_NAME	
    ,SRC_TBL.GENDER_KEY	
    ,SRC_TBL.ICO	
    ,SEQ_PARTY_KEY.nextval	
    ,SRC_TBL.RC	
    ,SRC_TBL.SHORT_NAME	
    ,SRC_TBL.SRC_ID	
    ,SRC_TBL.SRC_SYS_ID	
    )
"
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<132,7>MERGE INSERT/1 BIRTH_DATE","1 BIRTH_DATE","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<132,7>MERGE INSERT/10 RC","10 RC","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<132,7>MERGE INSERT/11 SHORT_NAME","11 SHORT_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<132,7>MERGE INSERT/12 SRC_ID","12 SRC_ID","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<132,7>MERGE INSERT/13 SRC_SYS_ID","13 SRC_SYS_ID","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<132,7>MERGE INSERT/2 BUS_NAME","2 BUS_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<132,7>MERGE INSERT/3 CUST_NO","3 CUST_NO","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<132,7>MERGE INSERT/4 COUNTRY_KEY","4 COUNTRY_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<132,7>MERGE INSERT/5 FAMILY_NAME","5 FAMILY_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<132,7>MERGE INSERT/6 FIRST_NAME","6 FIRST_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<132,7>MERGE INSERT/7 GENDER_KEY","7 GENDER_KEY","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<132,7>MERGE INSERT/8 ICO","8 ICO","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/IMPORT/<132,7>MERGE INSERT/9 PARTY_KEY","9 PARTY_KEY","",""
"com.getmanta.edc.Procedure","DWH/Packages/IMPORT_LOAN/Procedures/VALIDATE","VALIDATE","",""
"com.getmanta.edc.Statement","DWH/Packages/IMPORT_LOAN/Procedures/VALIDATE/<40,9>INSERT","<40,9>INSERT","","insert into LOAD_LOG (LOAD_DATE, STATUS, STATUS_DATE) VALUES (P_CURRENT_DATE, 'STARTED', sysdate)
"
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/VALIDATE/<40,9>INSERT/1 LOAD_DATE","1 LOAD_DATE","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/VALIDATE/<40,9>INSERT/2 STATUS","2 STATUS","",""
"com.getmanta.edc.Column","DWH/Packages/IMPORT_LOAN/Procedures/VALIDATE/<40,9>INSERT/3 STATUS_DATE","3 STATUS_DATE","",""
"com.getmanta.edc.Package","DWH/Packages/REPORTING","REPORTING","",""
"com.getmanta.edc.Group","DWH/Packages/REPORTING/Procedures","Procedures","",""
"com.getmanta.edc.Procedure","DWH/Packages/REPORTING/Procedures/REPORT_CLIENT","REPORT_CLIENT","",""
"com.getmanta.edc.Statement","DWH/Packages/REPORTING/Procedures/REPORT_CLIENT/<7,5>INSERT","<7,5>INSERT","","insert into REP_CLIENT TARGET_TBL (
    ADDRESS_LINE1
    ,ADDRESS_LINE2
    ,ADDRESS_LINE3
    ,DIC
    ,ICO
    ,CUSTOMER_NAME
    ,CUSTOMER_NO
    ,CUST_CLASSIFICATION
    ,COUNTRY
    ,DATE_OF_BIRTH
    ,FULL_NAME
    ,SNAP_DATE
    )
  select 
    SRC_TBL.ADDRESS_LINE1
    ,SRC_TBL.ADDRESS_LINE2
    ,SRC_TBL.ADDRESS_LINE3
    ,SRC_TBL.DIC
    ,SRC_TBL.ICO
    ,SRC_TBL.CUSTOMER_NAME
    ,SRC_TBL.CUSTOMER_NO
    ,SRC_TBL.CUST_CLASSIFICATION
    ,SRC_TBL.COUNTRY
    ,SRC_TBL.DATE_OF_BIRTH
    ,SRC_TBL.FULL_NAME
    ,SRC_TBL.SNAP_DATE
  from (
    select
      ADDRESS_LINE1,
      ADDRESS_LINE2,
      ADDRESS_LINE3,
      DIC,
      ICO,
      CUSTOMER_NAME,
      CUSTOMER_NO,
      CUST_CLASSIFICATION,
      COUNTRY,
      DATE_OF_BIRTH,
      FULL_NAME,
      SNAP_DATE
    from (
      select 
        PARTY_ADDR_H.STREET_NAME as ADDRESS_LINE1,
        PARTY_ADDR_H.CITY_NAME as ADDRESS_LINE2,
        PARTY_ADDR_H.ZIP as ADDRESS_LINE3,
        PARTY_H.DIC as DIC,
        PARTY_H.ICO as ICO,
        PARTY_H.FIRST_NAME||'.'||PARTY_H.FAMILY_NAME as CUSTOMER_NAME,
        PARTY_H.CUST_NO as CUSTOMER_NO,
        SEG.ID as CUST_CLASSIFICATION,
        CNTRY.ID as COUNTRY,
        PARTY_H.BIRTH_DATE as DATE_OF_BIRTH,
        PARTY_H.FIRST_NAME||'.'||PARTY_H.FAMILY_NAME as FULL_NAME,
        row_number() over (partition by 
          PARTY_H.PARTY_KEY
          order by decode( PARTY_H.SRC_SYS_ID, 'LOAN', 0, 'CRM', 1, 99), PARTY_H.PARTY_KEY) as RN,
        P_CURRENT_DATE as SNAP_DATE
      from 
        PARTY_H
        inner join CD_COUNTRY CNTRY on CNTRY.COUNTRY_KEY = PARTY_H.COUNTRY_KEY
        inner join PARTY_ADDR_H PARTY_ADDR_H on PARTY_ADDR_H.PARTY_KEY = PARTY_H.PARTY_KEY
              and P_CURRENT_DATE between PARTY_ADDR_H.VALID_FROM and PARTY_ADDR_H.VALID_TO
        inner join ADDR_PURP on PARTY_ADDR_H.ADDR_PURP_KEY = ADDR_PURP.ADDR_PURP_KEY
              and ADDR_PURP.SRC_ID in ('CRM', 'LOAN')      
        left join SEGMENT_H SEGMENT_H on SEGMENT_H.PARTY_KEY = PARTY_H.PARTY_KEY
              and P_CURRENT_DATE between SEGMENT_H.VALID_FROM and SEGMENT_H.VALID_TO
        left join CD_SEGMENT SEG on SEG.SEG_KEY = SEGMENT_H.SEG_KEY
        
      where 
        PARTY_H.PARTY_KEY > 0
      )
    where 
      RN = 1
    ) SRC_TBL
"
"com.getmanta.edc.Column","DWH/Packages/REPORTING/Procedures/REPORT_CLIENT/<7,5>INSERT/1 ADDRESS_LINE1","1 ADDRESS_LINE1","",""
"com.getmanta.edc.Column","DWH/Packages/REPORTING/Procedures/REPORT_CLIENT/<7,5>INSERT/10 DATE_OF_BIRTH","10 DATE_OF_BIRTH","",""
"com.getmanta.edc.Column","DWH/Packages/REPORTING/Procedures/REPORT_CLIENT/<7,5>INSERT/11 FULL_NAME","11 FULL_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/REPORTING/Procedures/REPORT_CLIENT/<7,5>INSERT/12 SNAP_DATE","12 SNAP_DATE","",""
"com.getmanta.edc.Column","DWH/Packages/REPORTING/Procedures/REPORT_CLIENT/<7,5>INSERT/2 ADDRESS_LINE2","2 ADDRESS_LINE2","",""
"com.getmanta.edc.Column","DWH/Packages/REPORTING/Procedures/REPORT_CLIENT/<7,5>INSERT/3 ADDRESS_LINE3","3 ADDRESS_LINE3","",""
"com.getmanta.edc.Column","DWH/Packages/REPORTING/Procedures/REPORT_CLIENT/<7,5>INSERT/4 DIC","4 DIC","",""
"com.getmanta.edc.Column","DWH/Packages/REPORTING/Procedures/REPORT_CLIENT/<7,5>INSERT/5 ICO","5 ICO","",""
"com.getmanta.edc.Column","DWH/Packages/REPORTING/Procedures/REPORT_CLIENT/<7,5>INSERT/6 CUSTOMER_NAME","6 CUSTOMER_NAME","",""
"com.getmanta.edc.Column","DWH/Packages/REPORTING/Procedures/REPORT_CLIENT/<7,5>INSERT/7 CUSTOMER_NO","7 CUSTOMER_NO","",""
"com.getmanta.edc.Column","DWH/Packages/REPORTING/Procedures/REPORT_CLIENT/<7,5>INSERT/8 CUST_CLASSIFICATION","8 CUST_CLASSIFICATION","",""
"com.getmanta.edc.Column","DWH/Packages/REPORTING/Procedures/REPORT_CLIENT/<7,5>INSERT/9 COUNTRY","9 COUNTRY","",""
"com.getmanta.edc.Package","DWH/Packages/TEST_SYNONYMS","TEST_SYNONYMS","",""
"com.getmanta.edc.Group","DWH/Packages/TEST_SYNONYMS/Procedures","Procedures","",""
"com.getmanta.edc.Procedure","DWH/Packages/TEST_SYNONYMS/Procedures/TEST_SYNONYMS_PROC","TEST_SYNONYMS_PROC","",""
"com.getmanta.edc.Statement","DWH/Packages/TEST_SYNONYMS/Procedures/TEST_SYNONYMS_PROC/<10,6>INSERT","<10,6>INSERT","","insert into SYN_TEST_2_SYNONYM (A, B) 
select A, B from SYN_TEST_3
"
"com.getmanta.edc.Column","DWH/Packages/TEST_SYNONYMS/Procedures/TEST_SYNONYMS_PROC/<10,6>INSERT/1 A","1 A","",""
"com.getmanta.edc.Column","DWH/Packages/TEST_SYNONYMS/Procedures/TEST_SYNONYMS_PROC/<10,6>INSERT/2 B","2 B","",""
"com.getmanta.edc.Statement","DWH/Packages/TEST_SYNONYMS/Procedures/TEST_SYNONYMS_PROC/<7,6>INSERT","<7,6>INSERT","","insert into SYN_TEST_1 (A, B) 
select A, B from SYN_TEST_2_SYNONYM
"
"com.getmanta.edc.Column","DWH/Packages/TEST_SYNONYMS/Procedures/TEST_SYNONYMS_PROC/<7,6>INSERT/1 A","1 A","",""
"com.getmanta.edc.Column","DWH/Packages/TEST_SYNONYMS/Procedures/TEST_SYNONYMS_PROC/<7,6>INSERT/2 B","2 B","",""
"com.getmanta.edc.Package","DWH/Packages/TEST_TL","TEST_TL","",""
"com.getmanta.edc.Group","DWH/Packages/TEST_TL/Procedures","Procedures","",""
"com.getmanta.edc.Procedure","DWH/Packages/TEST_TL/Procedures/TEST_TL_PROC","TEST_TL_PROC","",""
"com.getmanta.edc.Statement","DWH/Packages/TEST_TL/Procedures/TEST_TL_PROC/<7,6>INSERT","<7,6>INSERT","","insert into TL_TEST_2 (A, B) 
select test_tl_fnc3(A, B), test_tl_fnc1(A) * test_tl_fnc2(B) from TL_TEST_1
"
"com.getmanta.edc.Column","DWH/Packages/TEST_TL/Procedures/TEST_TL_PROC/<7,6>INSERT/1 A","1 A","",""
"com.getmanta.edc.Column","DWH/Packages/TEST_TL/Procedures/TEST_TL_PROC/<7,6>INSERT/2 B","2 B","",""
